from PIL import Image
import numpy as np

def encrypt_image(image_path, shift_value, output_path):
    image = Image.open(image_path)
    image_array = np.array(image)
    
    # Encrypt the image by adding shift_value to each pixel
    encrypted_array = (image_array + shift_value) % 256
    
    encrypted_image = Image.fromarray(encrypted_array.astype('uint8'))
    encrypted_image.save(output_path)
    print(f"Image encrypted and saved to {output_path}")

def decrypt_image(encrypted_image_path, shift_value, output_path):
    encrypted_image = Image.open(encrypted_image_path)
    encrypted_array = np.array(encrypted_image)
    
    # Decrypt the image by subtracting shift_value from each pixel
    decrypted_array = (encrypted_array - shift_value) % 256
    
    decrypted_image = Image.fromarray(decrypted_array.astype('uint8'))
    decrypted_image.save(output_path)
    print(f"Image decrypted and saved to {output_path}")

def main():
    choice = input("Type 'e' to encrypt or 'd' to decrypt: ").lower()
    if choice not in ['e', 'd']:
        print("Invalid choice. Please type 'e' to encrypt or 'd' to decrypt.")
        return
    
    image_path = input("Enter the path to the image: ")
    shift_value = int(input("Enter the shift value: "))
    output_path = input("Enter the output path for the processed image: ")
    
    if choice == 'e':
        encrypt_image(image_path, shift_value, output_path)
    elif choice == 'd':
        decrypt_image(image_path, shift_value, output_path)

if __name__ == "__main__":
    main()
